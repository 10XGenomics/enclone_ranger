name: Test enclone

on:
  pull_request:
  push:
    branches:
      - master

env:
  CARGO_DENY_VERSION: "0.12.1"
  RUST_VERSION: "1.61.0"
  CARGO_INCREMENTAL: 0

permissions:
  contents: read
  # Write permissions are required in order to produce annotations.
  checks: write

jobs:
  test-mac:
    # This job runs on MacOS Catalina
    runs-on: macos-latest
    steps:

      - name: Install Rust
        if: env.run_tests
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ env.RUST_VERSION }}
          components: rustfmt, clippy
          default: true

      # check out master

      - name: Checkout enclone master
        uses: actions/checkout@master

      - uses: Swatinem/rust-cache@v1
        with:
          key: ${{ matrix.style }}v1 # increment this to bust the cache if needed

      # start the real work

      - name: Remove the Cargo target directory
        if: github.ref == 'refs/heads/master'
        run: cargo clean
      - name: build-enclone
        run: cargo build
      - name: unit tests
        run: cargo test -- --nocapture

  test-linux:
    # This job runs on Linux
    runs-on: ubuntu-latest
    steps:

      - name: Install Rust
        if: env.run_tests
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ env.RUST_VERSION }}
          components: rustfmt, clippy
          default: true

      # check out master

      - name: Checkout enclone master
        uses: actions/checkout@master
        with:
          fetch-depth: 100

      # set up caching (duplicated verbatim below)

      - uses: Swatinem/rust-cache@v1
        with:
          key: ${{ matrix.style }}v1 # increment this to bust the cache if needed

      # start the real work

      - name: Check for large files
        run: >
          git rev-list --objects ${{github.event.pull_request.base.sha}}..
          | git cat-file --batch-check='%(objectname) %(objecttype) %(objectsize) %(rest)'
          | awk '$2 == "blob" && $3 >= 1600000 { print substr($1, 1, 7), $3, $4; fail=1 } END { exit fail }'
      - name: Remove the Cargo target directory
        if: github.ref == 'refs/heads/master'
        run: cargo clean
      - name: Install cargo-deny
        run: |
          wget https://github.com/EmbarkStudios/cargo-deny/releases/download/${CARGO_DENY_VERSION}/cargo-deny-${CARGO_DENY_VERSION}-x86_64-unknown-linux-musl.tar.gz
          tar -xvf cargo-deny-${CARGO_DENY_VERSION}-x86_64-unknown-linux-musl.tar.gz
          mkdir -p ~/bin/
          cp cargo-deny-${CARGO_DENY_VERSION}-x86_64-unknown-linux-musl/cargo-deny ~/bin/
          rm -r cargo-deny-${CARGO_DENY_VERSION}-x86_64-unknown-linux-musl*
          echo "$HOME/bin" >> $GITHUB_PATH
      - name: Check Rust formatting
        run: cargo fmt -- --check
      - name: Deny duplicate dependencies (lib/rust)
        run: cargo deny --locked check
      - name: Run clippy
        uses: actions-rs/clippy-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          # Github limits the number of annotations it will display on a PR for
          # a given action, so we're going to disable (for now!) some of the
          # noisier lints so that more important ones are more likely to be
          # visible.
          # NOTE: keep this list in sync with lib/rust/.cargo/config, or else
          #       which is ignored when running in this mode but not when
          #       running locally.
          # TODO: re-enable the allowed lints at the end of this list.
          args: |
            --all-targets --locked --
            -D clippy::perf
            -D clippy::suspicious
            -A clippy::comparison_chain
            -W future_incompatible
            -W nonstandard_style
            -W rust_2018_compatibility
            -W rust_2021_compatibility
            -W unused
            -D clippy::enum_glob_use
            -D clippy::needless_lifetimes
            -D clippy::redundant_closure_for_method_calls
            -D clippy::unused_io_amount
            -D clippy::wildcard_imports
            -W clippy::blacklisted_name
            -W clippy::enum_variant_names
            -W clippy::large-enum-variant
            -W clippy::missing_safety_doc
            -A clippy::needless_range_loop
            -A clippy::type_complexity
            -A clippy::too_many_arguments
      - name: build-enclone
        run: cargo build
      - name: unit tests
        run: cargo test -- --nocapture
